version: '3.8'

services:
  hunyuanworld-voyager-cpu:
    image: ubuntu:22.04
    container_name: hunyuanworld-voyager-cpu
    restart: unless-stopped
    
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        set -e
        echo "🚀 HunyuanWorld-Voyager CPU - Starting..."
        echo "⚠️ WARNING: Running in CPU-only mode (limited functionality)"
        
        export DEBIAN_FRONTEND=noninteractive
        
        # Ensure clean app directory
        mkdir -p /app
        
        # Install basic dependencies
        apt-get update && apt-get install -y \
            python3.11 python3.11-dev python3-pip git curl \
            libgl1-mesa-glx libglib2.0-0 build-essential \
            && rm -rf /var/lib/apt/lists/*
        
        # Configure Python
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
        python3 -m pip install --upgrade pip
        
        # Setup repository
        if [ ! -d "/app/.git" ]; then
            echo "📦 Setting up repository..."
            rm -rf /app/* /app/.[^.]* 2>/dev/null || true
            git clone https://github.com/dmax101/HunyuanWorld-Voyager.git /tmp/repo
            mv /tmp/repo/* /app/ 2>/dev/null || true
            mv /tmp/repo/.[^.]* /app/ 2>/dev/null || true
            rm -rf /tmp/repo
        else
            echo "📦 Repository already exists, updating..."
            cd /app && git pull origin main 2>/dev/null || echo "⚠️ Could not update repository"
        fi
        
        cd /app
        
        # Install PyTorch CPU-only
        echo "🔧 Installing PyTorch CPU-only..."
        pip install torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0 \
            --index-url https://download.pytorch.org/whl/cpu
        
        # Install basic dependencies for interface
        echo "📚 Installing interface dependencies..."
        pip install --no-cache-dir gradio transformers pillow numpy opencv-python \
                   imageio scipy loguru tqdm pandas accelerate || {
            echo "⚠️ Some packages failed to install, continuing with basic setup..."
            pip install --no-cache-dir gradio pillow numpy || exit 1
        }
        
        # Create simple demo app
        echo "🎯 Creating test interface..."
        cat > /app/app_cpu.py << 'APPEOF'
        import gradio as gr
        import time
        import os
        
        os.environ["CUDA_VISIBLE_DEVICES"] = ""
        
        def test_func(image, direction, prompt):
            if image is None:
                return None, "❌ Please upload an image first"
            time.sleep(2)
            result = f"✅ Test completed!\n📷 Image: {image.size}\n🧭 Direction: {direction}\n📝 Prompt: {prompt}\n\n⚠️ CPU Mode - Limited functionality\n🎯 For full features, use GPU version"
            return image, result
        
        with gr.Blocks(title="Voyager CPU Test") as demo:
            gr.Markdown("# ☯️ HunyuanWorld-Voyager (CPU Test)")
            with gr.Row():
                with gr.Column():
                    img = gr.Image(label="Upload", type="pil")
                    direction = gr.Dropdown(["forward", "backward", "left", "right"], value="forward")
                    prompt = gr.Textbox(label="Prompt", lines=3)
                    btn = gr.Button("🔍 Test", variant="primary")
                with gr.Column():
                    out_img = gr.Image(label="Result")
                    out_txt = gr.Textbox(label="Status", lines=8)
            btn.click(test_func, [img, direction, prompt], [out_img, out_txt])
            gr.Markdown("💡 CPU version for testing interface only")
        
        demo.launch(server_name="0.0.0.0", server_port=8080, share=False)
        APPEOF
        
        echo ""
        echo "🌟 VOYAGER CPU DEMO READY!"
        echo "🌐 Interface: http://localhost:3500"
        echo "🖥️ Mode: CPU-only (interface testing)"
        echo "⚠️ Limited: No video generation"
        echo ""
        
        # Start CPU demo
        echo "🚀 Starting test interface..."
        python3 /app/app_cpu.py
    
    ports:
      - "3500:8080"
    
    volumes:
      - voyager_cpu_app:/app
      - voyager_cpu_temp:/app/temp
      - voyager_cpu_cache:/root/.cache
    
    environment:
      - CUDA_VISIBLE_DEVICES=""
      - TORCH_DEVICE=cpu
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=8080
      - GRADIO_ANALYTICS_ENABLED=false
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
    
    shm_size: 1gb
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 180s
    
    networks:
      - voyager_cpu_net

volumes:
  voyager_cpu_app:
    driver: local
  voyager_cpu_temp:
    driver: local
  voyager_cpu_cache:
    driver: local

networks:
  voyager_cpu_net:
    driver: bridge